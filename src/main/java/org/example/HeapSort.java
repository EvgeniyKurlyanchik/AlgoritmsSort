package org.example;

import java.util.Arrays;

//Heap Sort - это алгоритм сортировки, который работает на основе двоичной
//        кучи (binary heap). Куча представляет собой структуру данных, которая
//        удовлетворяет условию кучи: для каждого узла X, ключ родительского узла
//        меньше или равен ключу X. В этом алгоритме используется свойство, что наибольший
//        элемент всегда находится в корне кучи. Он вынимает наибольший элемент из кучи и помещает
//        его в конец массива, после чего перестраивает кучу таким образом,
//        чтобы следующий наибольший элемент оказался в корне кучи.
//
//        Пример кода на Java:
public class HeapSort {
    public static void main(String[] args) {
        int[] arr = {10, 7, 8, 9, 1, 5,4,5,68,89};
        HeapSort.sort(arr);
        System.out.println(Arrays.toString(arr));
    }
    public static void sort(int[] arr) {
        int n = arr.length;
        for (int i = n / 2 - 1; i >= 0; i--)
            heapify(arr, n, i);
        for (int i = n - 1; i >= 0; i--) {
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;
            heapify(arr, i, 0);
        }
    }

    private static void heapify(int[] arr, int n, int i) {
        int largest = i;
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        if (l < n && arr[l] > arr[largest])
            largest = l;
        if (r < n && arr[r] > arr[largest])
            largest = r;
        if (largest != i) {
            int swap = arr[i];
            arr[i] = arr[largest];
            arr[largest] = swap;
            heapify(arr, n, largest);
        }
    }
}

//    Этот код реализует алгоритм Heap Sort в методе sort. Первый цикл строит максимальную
//    кучу из заданного массива, начиная с последнего узла и работая в обратном порядке к корню.
//        Затем, второй цикл извлекает по одному элементу из кучи и помещает их в конец массива,
//        перестраивая кучу после каждого извлечения элемента.
//
//        Метод heapify - это процедура перестройки кучи, которая поддерживает свойство кучи, начиная с заданного узла.
//
//        Пример использования:
//        Этот код создает массив из 6 элементов и сортирует его с помощью метода sort класса HeapSort/
//        Результатом будет отсортированный массив: [1, 5, 7, 8, 9, 10].